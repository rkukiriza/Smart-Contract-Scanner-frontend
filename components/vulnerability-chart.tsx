"use client"

import { Line, LineChart, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from "recharts"
import { ChartContainer, ChartTooltip, ChartTooltipContent } from "@/components/ui/chart"

interface ScanRecord {
  date: string
  time: string
  contract: string
  vulns: number
  duration: string
}

interface VulnerabilityChartProps {
  data: ScanRecord[]
}

export function VulnerabilityChart({ data }: VulnerabilityChartProps) {
  const chartData = data
    .slice(0, 10)
    .reverse()
    .map((scan, index) => ({
      scan: `Scan ${index + 1}`,
      vulnerabilities: scan.vulns,
      contract: scan.contract.slice(0, 10) + "...",
    }))

  // If no data, show placeholder
  if (chartData.length === 0) {
    chartData.push(
      { scan: "Scan 1", vulnerabilities: 0, contract: "No data" },
      { scan: "Scan 2", vulnerabilities: 0, contract: "No data" },
    )
  }

  return (
    <ChartContainer
      config={{
        vulnerabilities: {
          label: "Vulnerabilities Found",
          color: "hsl(var(--chart-1))",
        },
      }}
      className="h-[350px] w-full"
    >
      <ResponsiveContainer width="100%" height="100%">
        <LineChart data={chartData} margin={{ top: 5, right: 10, left: 10, bottom: 5 }}>
          <CartesianGrid strokeDasharray="3 3" className="stroke-muted" />
          <XAxis dataKey="scan" className="text-xs" tick={{ fill: "hsl(var(--muted-foreground))" }} />
          <YAxis className="text-xs" tick={{ fill: "hsl(var(--muted-foreground))" }} domain={[0, "auto"]} />
          <ChartTooltip content={<ChartTooltipContent />} />
          <Line
            type="monotone"
            dataKey="vulnerabilities"
            stroke="var(--color-vulnerabilities)"
            strokeWidth={3}
            dot={{ fill: "var(--color-vulnerabilities)", r: 5 }}
            activeDot={{ r: 7 }}
          />
        </LineChart>
      </ResponsiveContainer>
    </ChartContainer>
  )
}
